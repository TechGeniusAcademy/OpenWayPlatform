import pg from 'pg';
import dotenv from 'dotenv';

dotenv.config();

const { Pool } = pg;

const pool = new Pool({
  host: process.env.DB_HOST,
  port: process.env.DB_PORT,
  database: process.env.DB_NAME,
  user: process.env.DB_USER,
  password: process.env.DB_PASSWORD,
});

async function migrate() {
  try {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ question_id –≤ game_rounds...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∫–æ–ª–æ–Ω–∫–∞
    const checkColumn = await pool.query(`
      SELECT column_name 
      FROM information_schema.columns 
      WHERE table_name = 'game_rounds' 
      AND column_name = 'question_id'
    `);

    if (checkColumn.rows.length > 0) {
      console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ question_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    } else {
      // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É
      await pool.query(`
        ALTER TABLE game_rounds 
        ADD COLUMN question_id INTEGER REFERENCES game_questions(id)
      `);
      console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ question_id —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞');
    }

    console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
  } finally {
    await pool.end();
  }
}

migrate();
