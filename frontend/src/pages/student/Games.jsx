import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import ChessGame from '../../components/ChessGame';
import OnlineChess from '../../components/OnlineChess';
import QuizBattle from '../../components/QuizBattle';
import CrashGame from '../../components/CrashGame';
import PokerGame from '../../components/PokerGame';
import './Games.css';
import { MdOutlineQuiz } from "react-icons/md";
import { FaChess, FaRocket } from "react-icons/fa";
import { GiPokerHand } from "react-icons/gi";



function Games() {
  const navigate = useNavigate();
  const [selectedGame, setSelectedGame] = useState(null);

  const games = [
    {
      id: 'crash',
      title: 'Crash Game üöÄ',
      icon: <FaRocket />,
      description: '–ê–∑–∞—Ä—Ç–Ω–∞—è –∏–≥—Ä–∞ —Å –º–Ω–æ–∂–∏—Ç–µ–ª—è–º–∏! –°—Ç–∞–≤—å –±–∞–ª–ª—ã –∏ –≤—ã–≤–æ–¥–∏ –∏—Ö –≤–æ–≤—Ä–µ–º—è, –ø–æ–∫–∞ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–µ–ª –∫—Ä–∞—à',
      color: '#f093fb',
      available: true
    },
    {
      id: 'poker',
      title: '–¢–µ—Ö–∞—Å—Å–∫–∏–π –•–æ–ª–¥–µ–º ‚ô† (–ï—â–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)',
      icon: <GiPokerHand />,
      description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –ø–æ–∫–µ—Ä! –†–∞–∑–¥–∞—á–∞ –∫–∞—Ä—Ç, —Ñ–ª–æ–ø, —Ç–µ—Ä–Ω –∏ —Ä–∏–≤–µ—Ä. –ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è –∏–≥—Ä–∞ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω',
      color: '#2ecc71',
      available: true
    },
    {
      id: 'quiz-battle',
      title: '–ë–∏—Ç–≤–∞ –ó–Ω–∞–Ω–∏–π',
      icon: <MdOutlineQuiz />,
      description: 'PvP –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏! –°–æ—Ä–µ–≤–Ω—É–π—Å—è —Å –¥—Ä—É–≥–∏–º–∏ —É—á–µ–Ω–∏–∫–∞–º–∏ –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –∑–Ω–∞–Ω–∏—è',
      color: '#667eea',
      available: true
    },
    {
      id: 'online-chess',
      title: '–û–Ω–ª–∞–π–Ω –®–∞—Ö–º–∞—Ç—ã',
      icon: <FaChess />,
      description: '–ò–≥—Ä–∞–π –≤ —à–∞—Ö–º–∞—Ç—ã –æ–Ω–ª–∞–π–Ω —Å –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏ –∏–∑ —Ç–≤–æ–µ–π –≥—Ä—É–ø–ø—ã',
      color: '#667eea',
      available: true
    },
    {
      id: 'chess',
      title: '–®–∞—Ö–º–∞—Ç—ã vs AI',
      icon: <FaChess />,
      description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞ –≤ —à–∞—Ö–º–∞—Ç—ã –ø—Ä–æ—Ç–∏–≤ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ —É—Ä–æ–≤–Ω—è–º–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏',
      color: '#764ba2',
      available: true
    }
  ];

  const handleGameClick = (game) => {
    if (game.available) {
      setSelectedGame(game.id);
    }
  };

  const handleBack = () => {
    setSelectedGame(null);
  };

  if (selectedGame === 'crash') {
    return (
      <div className="games-page">
        <button onClick={handleBack} className="back-button">
          ‚Üê –ù–∞–∑–∞–¥ –∫ –∏–≥—Ä–∞–º
        </button>
        <CrashGame />
      </div>
    );
  }

  if (selectedGame === 'poker') {
    return (
      <div className="games-page">
        <button onClick={handleBack} className="back-button">
          ‚Üê –ù–∞–∑–∞–¥ –∫ –∏–≥—Ä–∞–º
        </button>
        <PokerGame />
      </div>
    );
  }

  if (selectedGame === 'quiz-battle') {
    return (
      <div className="games-page">
        <button onClick={handleBack} className="back-button">
          ‚Üê –ù–∞–∑–∞–¥ –∫ –∏–≥—Ä–∞–º
        </button>
        <QuizBattle />
      </div>
    );
  }

  if (selectedGame === 'online-chess') {
    return (
      <div className="games-page">
        <button onClick={handleBack} className="back-button">
          ‚Üê –ù–∞–∑–∞–¥ –∫ –∏–≥—Ä–∞–º
        </button>
        <OnlineChess />
      </div>
    );
  }

  if (selectedGame === 'chess') {
    return (
      <div className="games-page">
        <button onClick={handleBack} className="back-button">
          ‚Üê –ù–∞–∑–∞–¥ –∫ –∏–≥—Ä–∞–º
        </button>
        <ChessGame />
      </div>
    );
  }

  return (
    <div className="games-page">
      <div className="games-header">
        <h1>üéÆ –ò–≥—Ä–æ–≤–∞—è –∫–æ–º–Ω–∞—Ç–∞</h1>
        <p>–û—Ç–¥–æ—Ö–Ω–∏ –∏ —Ä–∞–∑–≤–ª–µ–∫–∏—Å—å –º–µ–∂–¥—É –∑–∞–Ω—è—Ç–∏—è–º–∏!</p>
      </div>

      <div className="games-grid">
        {games.map(game => (
          <div
            key={game.id}
            className={`game-card ${!game.available ? 'disabled' : ''}`}
            onClick={() => handleGameClick(game)}
            style={{
              background: game.available 
                ? `linear-gradient(135deg, ${game.color}15, ${game.color}30)`
                : 'linear-gradient(135deg, #95a5a615, #95a5a630)'
            }}
          >
            <div className="game-icon">{game.icon}</div>
            <h3>{game.title}</h3>
            <p>{game.description}</p>
            {!game.available && (
              <div className="coming-soon">
                <span>üîú –°–∫–æ—Ä–æ</span>
              </div>
            )}
            {game.available && (
              <button className="play-button">
                –ò–≥—Ä–∞—Ç—å ‚Üí
              </button>
            )}
          </div>
        ))}
      </div>

      <div className="games-footer">
        <div className="stats-info">
          <div className="stat-card">
            <div className="stat-icon">üéØ</div>
            <div className="stat-content">
              <h4>–î–æ—Å—Ç—É–ø–Ω–æ –∏–≥—Ä</h4>
              <p className="stat-value">{games.filter(g => g.available).length}</p>
            </div>
          </div>
          
          <div className="stat-card">
            <div className="stat-icon">üí°</div>
            <div className="stat-content">
              <h4>–°–æ–≤–µ—Ç –¥–Ω—è</h4>
              <p className="stat-text">–î–µ–ª–∞–π –ø–µ—Ä–µ—Ä—ã–≤—ã –∫–∞–∂–¥—ã–π —á–∞—Å –¥–ª—è –ª—É—á—à–µ–π –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏!</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

export default Games;
