import { useState, useEffect } from 'react';
import api from '../../utils/api';
import './KnowledgeBase.css';

function KnowledgeBase() {
  const [articles, setArticles] = useState([]);
  const [categories, setCategories] = useState([]);
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedArticle, setSelectedArticle] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    loadKnowledgeBase();
  }, []);

  const loadKnowledgeBase = async () => {
    try {
      setLoading(true);
      // TODO: –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π API –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤
      // const response = await api.get('/knowledge-base');
      
      // –í—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
      const mockCategories = [
        { id: 1, name: '–û—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è', icon: 'üíª' },
        { id: 2, name: 'Web-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞', icon: 'üåê' },
        { id: 3, name: '–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö', icon: 'üóÑÔ∏è' },
        { id: 4, name: '–ê–ª–≥–æ—Ä–∏—Ç–º—ã', icon: 'üßÆ' },
        { id: 5, name: 'Git –∏ GitHub', icon: 'üîÄ' }
      ];

      const mockArticles = [
        {
          id: 1,
          title: '–í–≤–µ–¥–µ–Ω–∏–µ –≤ JavaScript',
          category_id: 1,
          category: '–û—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è',
          description: '–û—Å–Ω–æ–≤—ã —è–∑—ã–∫–∞ JavaScript –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
          content: `# –í–≤–µ–¥–µ–Ω–∏–µ –≤ JavaScript

JavaScript ‚Äî —ç—Ç–æ –º–æ—â–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü.

## –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏

### –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
\`\`\`javascript
let name = "–ò–≤–∞–Ω";
const age = 25;
var city = "–ê–ª–º–∞—Ç—ã";
\`\`\`

### –§—É–Ω–∫—Ü–∏–∏
\`\`\`javascript
function greet(name) {
  return "–ü—Ä–∏–≤–µ—Ç, " + name + "!";
}

console.log(greet("–ú–∏—Ä"));
\`\`\`

### –ú–∞—Å—Å–∏–≤—ã
\`\`\`javascript
const fruits = ["—è–±–ª–æ–∫–æ", "–±–∞–Ω–∞–Ω", "–∞–ø–µ–ª—å—Å–∏–Ω"];
console.log(fruits[0]); // —è–±–ª–æ–∫–æ
\`\`\``,
          views: 245,
          created_at: '2025-10-15'
        },
        {
          id: 2,
          title: 'HTML5 –∏ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –≤–µ—Ä—Å—Ç–∫–∞',
          category_id: 2,
          category: 'Web-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
          description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã HTML5',
          content: `# HTML5 –∏ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –≤–µ—Ä—Å—Ç–∫–∞

HTML5 –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–µ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞.

## –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–≥–∏

- \`<header>\` - –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
- \`<nav>\` - –ù–∞–≤–∏–≥–∞—Ü–∏—è
- \`<main>\` - –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
- \`<article>\` - –°—Ç–∞—Ç—å—è
- \`<section>\` - –°–µ–∫—Ü–∏—è
- \`<footer>\` - –ü–æ–¥–≤–∞–ª`,
          views: 189,
          created_at: '2025-10-16'
        },
        {
          id: 3,
          title: '–û—Å–Ω–æ–≤—ã SQL',
          category_id: 3,
          category: '–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö',
          description: '–Ø–∑—ã–∫ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤',
          content: `# –û—Å–Ω–æ–≤—ã SQL

SQL (Structured Query Language) ‚Äî —è–∑—ã–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—ã–º–∏ –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö.

## –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã

### SELECT
\`\`\`sql
SELECT * FROM users;
SELECT name, email FROM users WHERE age > 18;
\`\`\`

### INSERT
\`\`\`sql
INSERT INTO users (name, email, age) 
VALUES ('–ò–≤–∞–Ω', 'ivan@example.com', 25);
\`\`\``,
          views: 312,
          created_at: '2025-10-17'
        }
      ];

      setCategories(mockCategories);
      setArticles(mockArticles);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π:', error);
    } finally {
      setLoading(false);
    }
  };

  const filteredArticles = articles.filter(article => {
    const matchesCategory = selectedCategory === 'all' || article.category_id === selectedCategory;
    const matchesSearch = article.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         article.description.toLowerCase().includes(searchQuery.toLowerCase());
    return matchesCategory && matchesSearch;
  });

  const handleArticleClick = (article) => {
    setSelectedArticle(article);
    // TODO: –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
  };

  if (loading) {
    return (
      <div className="knowledge-base-loading">
        <div className="loader"></div>
        <p>–ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π...</p>
      </div>
    );
  }

  return (
    <div className="knowledge-base">
      {!selectedArticle ? (
        <>
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –ø–æ–∏—Å–∫ */}
          <div className="kb-header">
            <div className="kb-header-content">
              <h1>üìö –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π</h1>
              <p>–ò–∑—É—á–∞–π—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ —Ä–∞—Å—à–∏—Ä—è–π—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è</p>
            </div>
            <div className="kb-search">
              <input
                type="text"
                placeholder="üîç –ü–æ–∏—Å–∫ –ø–æ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                className="kb-search-input"
              />
            </div>
          </div>

          {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
          <div className="kb-categories">
            <button
              className={`kb-category ${selectedCategory === 'all' ? 'active' : ''}`}
              onClick={() => setSelectedCategory('all')}
            >
              <span className="category-icon">üìã</span>
              <span className="category-name">–í—Å–µ —Ç–µ–º—ã</span>
            </button>
            {categories.map(category => (
              <button
                key={category.id}
                className={`kb-category ${selectedCategory === category.id ? 'active' : ''}`}
                onClick={() => setSelectedCategory(category.id)}
              >
                <span className="category-icon">{category.icon}</span>
                <span className="category-name">{category.name}</span>
              </button>
            ))}
          </div>

          {/* –°–ø–∏—Å–æ–∫ —Å—Ç–∞—Ç–µ–π */}
          <div className="kb-articles-grid">
            {filteredArticles.length === 0 ? (
              <div className="kb-empty">
                <div className="kb-empty-icon">üîç</div>
                <h3>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h3>
                <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞</p>
              </div>
            ) : (
              filteredArticles.map(article => (
                <div
                  key={article.id}
                  className="kb-article-card"
                  onClick={() => handleArticleClick(article)}
                >
                  <div className="kb-article-header">
                    <span className="kb-article-category">{article.category}</span>
                    <span className="kb-article-views">üëÅÔ∏è {article.views}</span>
                  </div>
                  <h3 className="kb-article-title">{article.title}</h3>
                  <p className="kb-article-description">{article.description}</p>
                  <div className="kb-article-footer">
                    <span className="kb-article-date">
                      üìÖ {new Date(article.created_at).toLocaleDateString('ru-RU')}
                    </span>
                    <span className="kb-article-link">–ß–∏—Ç–∞—Ç—å ‚Üí</span>
                  </div>
                </div>
              ))
            )}
          </div>
        </>
      ) : (
        /* –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç—å–∏ */
        <div className="kb-article-view">
          <button
            className="kb-back-button"
            onClick={() => setSelectedArticle(null)}
          >
            ‚Üê –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É
          </button>
          
          <div className="kb-article-content">
            <div className="kb-article-meta">
              <span className="kb-article-category-badge">{selectedArticle.category}</span>
              <span className="kb-article-views-badge">üëÅÔ∏è {selectedArticle.views} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤</span>
            </div>
            
            <h1 className="kb-article-main-title">{selectedArticle.title}</h1>
            
            <div className="kb-article-info">
              <span>üìÖ {new Date(selectedArticle.created_at).toLocaleDateString('ru-RU')}</span>
            </div>

            <div className="kb-article-body">
              {/* –ü—Ä–æ—Å—Ç–æ–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ markdown-–ø–æ–¥–æ–±–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */}
              {selectedArticle.content.split('\n').map((line, index) => {
                if (line.startsWith('# ')) {
                  return <h1 key={index}>{line.substring(2)}</h1>;
                } else if (line.startsWith('## ')) {
                  return <h2 key={index}>{line.substring(3)}</h2>;
                } else if (line.startsWith('### ')) {
                  return <h3 key={index}>{line.substring(4)}</h3>;
                } else if (line.startsWith('```')) {
                  return <pre key={index}><code>{line}</code></pre>;
                } else if (line.trim() === '') {
                  return <br key={index} />;
                } else {
                  return <p key={index}>{line}</p>;
                }
              })}
            </div>
          </div>
        </div>
      )}
    </div>
  );
}

export default KnowledgeBase;
